import{_ as a,c as e,a as i,o as r}from"./app-O3nTvmNM.js";const n={};function p(o,t){return r(),e("div",null,t[0]||(t[0]=[i('<div class="hint-container tip"><p class="hint-container-title">提问</p><ol><li>ajax</li><li>Fetch API</li><li>jsonp</li></ol></div><h2 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax"><span>ajax</span></a></h2><p>ajax（Asynchronous JavaScript and XML）是指通过 javascript 的异步通信，从服务端获取 XML 文档， 从中提取数据，再将数据更新到当前网页的对应部分，而不需要刷新网页。</p><p>一般来说，ajax 包括以下几个步骤：</p><ul><li>通过 XMLHttpRequest 对象创建一个异步调用对象；</li><li>创建一个新的 HTTP 请求，并指定该 HTTP 请求的方法、URL 及验证信息</li><li>设置响应 HTTP 请求状态变化的函数</li><li>发送 HTTP 请求</li><li>获取异步调用返回的数据</li><li>使用 javascript 和 DOM 实现局部更新</li></ul><h2 id="fetch-api" tabindex="-1"><a class="header-anchor" href="#fetch-api"><span>Fetch API</span></a></h2><p>Fetch API 提供了一个 JavaScript 接口，用于访问和操纵 HTTP 管道的一些具体部分，例如请求和响应。它还提供了一个全局 fetch() 方法，该方法提供了一种简单，合理的方式来跨网络异步获取资源。</p><h2 id="jsonp" tabindex="-1"><a class="header-anchor" href="#jsonp"><span>jsonp</span></a></h2><p>jsonp 是一种利用 <code>&lt;script&gt;</code> 标签 来实现的 支持跨域的异步通信方案。</p><p>前端将函数名作为参数传递到后端服务，后端服务在函数中注入需要返回的数据后，作为动态脚本返回给前端， 前端通过 script 标签加载这个动态脚本后，调用该函数，获取到返回的数据。</p>',10)]))}const s=a(n,[["render",p],["__file","index.html.vue"]]),l=JSON.parse('{"path":"/article/kby2ggwi/","title":"异步请求","lang":"zh-CN","frontmatter":{"title":"异步请求","createTime":"2022/04/17 11:37:31","author":"李嘉明","tags":["javascript"],"permalink":"/article/kby2ggwi/","description":"提问 ajax Fetch API jsonp ajax ajax（Asynchronous JavaScript and XML）是指通过 javascript 的异步通信，从服务端获取 XML 文档， 从中提取数据，再将数据更新到当前网页的对应部分，而不需要刷新网页。 一般来说，ajax 包括以下几个步骤： 通过 XMLHttpRequest 对象...","head":[["meta",{"property":"og:url","content":"http://garmin21.github.io/jm-blog/article/kby2ggwi/"}],["meta",{"property":"og:site_name","content":"Garming"}],["meta",{"property":"og:title","content":"异步请求"}],["meta",{"property":"og:description","content":"提问 ajax Fetch API jsonp ajax ajax（Asynchronous JavaScript and XML）是指通过 javascript 的异步通信，从服务端获取 XML 文档， 从中提取数据，再将数据更新到当前网页的对应部分，而不需要刷新网页。 一般来说，ajax 包括以下几个步骤： 通过 XMLHttpRequest 对象..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-01T08:21:49.000Z"}],["meta",{"property":"article:author","content":"李嘉明"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2025-01-01T08:21:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异步请求\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-01T08:21:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李嘉明\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.17,"words":350},"git":{"updatedTime":1735719709000},"autoDesc":true,"filePathRelative":"1.前端/6.JavaScript/基础篇/异步请求.md","categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"e69382","sort":6,"name":"JavaScript"},{"id":"0fb168","sort":10005,"name":"基础篇"}],"bulletin":false}');export{s as comp,l as data};
