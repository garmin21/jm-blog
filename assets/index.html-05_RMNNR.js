import{_ as i,c as a,a as l,o as n}from"./app-BAyfK_aM.js";const e={};function p(t,s){return n(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1、gulp-介绍" tabindex="-1"><a class="header-anchor" href="#_1、gulp-介绍"><span>1、Gulp 介绍</span></a></h2><p>Gulp 本身并不支持特定格式的文件，它只关心流 (Stream) 的处理。因此，您可以使用 Gulp 处理任何类型的文件，只需要使用适当的插件来解析或转换它们。 例如，您可以使用 <code>gulp-sass</code> 插件来编译 Sass 文件，使用 <code>gulp-typescript</code> 插件来编译 TypeScript 文件，使用 <code>gulp-babel</code> 插件来转换 ES6 语法等等。只要为您想要处理的文件类型选择合适的插件并配置适当的任务，Gulp 就能够处理它们。 需要注意的是，Gulp 更擅长处理文本文件，如 HTML、CSS、JS、JSON 等，而不是二进制文件 (如图片、视频等)。对于后者，您可能需要使用其他工具来处理。</p><h2 id="_2、重要-api-介绍" tabindex="-1"><a class="header-anchor" href="#_2、重要-api-介绍"><span>2、重要 API 介绍</span></a></h2><ul><li><p>gulp.task(name, [deps], fn)</p><ul><li>=&gt; 语法: gulp.task( &#39;任务名称&#39;, 函数 )</li><li>=&gt; 作用: 创建 一个 任务 , 函数内书写该任务需要执行的代码</li><li>=&gt; 例子: gulp.task(&#39;cssHandler&#39;, ( ) =&gt; { 根据 gulp 的语法对 css 文件进行打包 })</li></ul></li><li><p>gulp.src(filePath/pathArr)</p><ul><li>=&gt; 语法: gulp.src( &#39;路径地址&#39; )</li><li>=&gt; 作用: 标注源文件所在目录</li><li>=&gt; 路径地址:</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>./src/css/a.css     指定找到某一个 css 文件</span></span>
<span class="line"><span>./src/css/*.css     指定找到 css 目录下的所有 .css 结尾的文件</span></span>
<span class="line"><span>./src/*/**          指定找到 src 目录下的所有文件</span></span>
<span class="line"><span>./src/*/*.css       指定找到 src 目录下的所有文件夹内的所有 .css文件</span></span>
<span class="line"><span>** /*               所有文件夹下的所有文件</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>=&gt; 返回值: gulp 任务流</li></ul></li><li><p>gulp.pipe(gulp 任务流)</p><ul><li>=&gt; 语法: 需要 gulp 任务流.pipe( 下一个工作内容 )</li><li>=&gt; 作用: 管道函数 , 用来执行各项工作内容的</li></ul></li><li><p>gulp.dest(dirPath/pathArr)</p><ul><li>=&gt; 语法: gulp.dest( &#39;路径&#39; )</li><li>=&gt; 作用: 把前面一个流传递来的内容放在指定目录文件夹下</li></ul></li><li><p>gulp.watch()</p><ul><li>=&gt; 语法: gulp.watch( 源&#39;文件&#39;路径, 任务名称 )</li><li>=&gt; 作用: 监控 指定源文件, 只要文件发生任何改变, 就执行一遍 指定任务</li></ul></li><li><p>gulp.series()</p><ul><li>=&gt; 语法: gulp.series( 任务 1, 任务 2, 任务 3, ... )</li><li>=&gt; 作用: <strong>串行</strong> 执行每一个任务</li><li>-&gt; 前一个任务做完, 在做下一个任务</li></ul></li><li><p>gulp.parallel()</p><ul><li>=&gt; 语法: gulp.parallel( 任务 1, 任务 2, 任务 3, ... )</li><li>=&gt; 作用: <strong>并行</strong> 开始每一个任务</li><li>-&gt; 所有任务同时开始</li></ul></li></ul><h2 id="_3、创建一个简单的应用" tabindex="-1"><a class="header-anchor" href="#_3、创建一个简单的应用"><span>3、创建一个简单的应用</span></a></h2><h3 id="项目目录" tabindex="-1"><a class="header-anchor" href="#项目目录"><span>项目目录</span></a></h3><div class="language-txt line-numbers-mode" data-ext="txt" data-title="txt"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>|- dist</span></span>
<span class="line"><span>|- build</span></span>
<span class="line"><span>|- src</span></span>
<span class="line"><span>  |- js</span></span>
<span class="line"><span>  |- less</span></span>
<span class="line"><span>|- index.html</span></span>
<span class="line"><span>|- gulpfile.ts ----- gulp配置文件</span></span>
<span class="line"><span>|- package.json</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-gulp" tabindex="-1"><a class="header-anchor" href="#安装-gulp"><span>安装 gulp</span></a></h3><ul><li>pnpm add gulp -D 局部安装</li><li>pnpm add @types/gulp -D gulp ts 类型支持</li><li>pnpm add sucrase -D gulp 默认是不支持 ES6 的语法，sucrase 默认提供了对 ES6 的语法 的转换</li></ul><h3 id="新增-gulpfile-ts" tabindex="-1"><a class="header-anchor" href="#新增-gulpfile-ts"><span>新增 <code>gulpfile.ts</code></span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//引入gulp模块</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> task</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> series</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gulp</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//定义任务</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">task</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">任务名</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // TODO: 将你的任务的任务代码放在这， 运行一个任务可以通过 gulp [任务名] 执行</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//定义默认任务</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">task</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">default</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// or</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// series 串行</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">series</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 对sass文件做处理</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">        // 把打包好的css输出到根目录的dist</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>package.json</code> 中 新增打包命令</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">scripts</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">: </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">build</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gulp</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // gulp default</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">    &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">build:css</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">gulp build:css</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // gulp build:css</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="http://www.gulpjs.com.cn/" target="_blank" rel="noopener noreferrer">中文主页</a></p>`,15)]))}const h=i(e,[["render",p],["__file","index.html.vue"]]),r=JSON.parse(`{"path":"/learn-build/gulp-start/","title":"Gulp 入门","lang":"zh-CN","frontmatter":{"title":"Gulp 入门","author":"李嘉明","createTime":"2024/04/12 03:40:46","permalink":"/learn-build/gulp-start/","head":[["script",{"type":"text/javascript"},"window._hmt = window._hmt || []"],["script",{"src":"https://hm.baidu.com/hm.js?49ebcb8d1abfcde890ef6f320a101db7","async":true}],["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"http://garmin21.github.io/jm-blog/learn-build/gulp-start/"}],["meta",{"property":"og:site_name","content":"Garming"}],["meta",{"property":"og:title","content":"Gulp 入门"}],["meta",{"property":"og:description","content":"1、Gulp 介绍 Gulp 本身并不支持特定格式的文件，它只关心流 (Stream) 的处理。因此，您可以使用 Gulp 处理任何类型的文件，只需要使用适当的插件来解析或转换它们。 例如，您可以使用 gulp-sass 插件来编译 Sass 文件，使用 gulp-typescript 插件来编译 TypeScript 文件，使用 gulp-babel..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-12T11:44:38.000Z"}],["meta",{"property":"article:author","content":"李嘉明"}],["meta",{"property":"article:modified_time","content":"2024-12-12T11:44:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gulp 入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-12T11:44:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李嘉明\\"}]}"]],"description":"1、Gulp 介绍 Gulp 本身并不支持特定格式的文件，它只关心流 (Stream) 的处理。因此，您可以使用 Gulp 处理任何类型的文件，只需要使用适当的插件来解析或转换它们。 例如，您可以使用 gulp-sass 插件来编译 Sass 文件，使用 gulp-typescript 插件来编译 TypeScript 文件，使用 gulp-babel..."},"headers":[{"level":2,"title":"1、Gulp 介绍","slug":"_1、gulp-介绍","link":"#_1、gulp-介绍","children":[]},{"level":2,"title":"2、重要 API 介绍","slug":"_2、重要-api-介绍","link":"#_2、重要-api-介绍","children":[]},{"level":2,"title":"3、创建一个简单的应用","slug":"_3、创建一个简单的应用","link":"#_3、创建一个简单的应用","children":[{"level":3,"title":"项目目录","slug":"项目目录","link":"#项目目录","children":[]},{"level":3,"title":"安装 gulp","slug":"安装-gulp","link":"#安装-gulp","children":[]},{"level":3,"title":"新增 gulpfile.ts","slug":"新增-gulpfile-ts","link":"#新增-gulpfile-ts","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"readingTime":{"minutes":2.57,"words":771},"git":{"updatedTime":1734003878000},"autoDesc":true,"filePathRelative":"notes/构建工具/Gulp/Gulp入门.md"}`);export{h as comp,r as data};
