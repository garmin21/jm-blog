import{_ as i,c as a,a as e,o as t}from"./app-BBWj-sxs.js";const n={};function l(p,s){return t(),a("div",null,s[0]||(s[0]=[e(`<blockquote><p>**在 Vue 3 的模板编译过程中，ref 会自动解包为其 .value 值。**这个机制被称为 &quot;template ref unwrapping&quot;，并且只在模板中生效，不会影响 JavaScript 逻辑。</p></blockquote><h3 id="原理-自动解包是如何实现的" tabindex="-1"><a class="header-anchor" href="#原理-自动解包是如何实现的"><span>原理：自动解包是如何实现的？</span></a></h3><p>✅ 1. 编译阶段处理：模板编译器会自动识别 ref 并插入 .value 访问</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">return</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> render</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> createVNode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">div</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    unref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 👈 相当于 count.value</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ])</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>✅ 2. unref() 是什么？</p><p>Vue 提供的工具函数，作用如下：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">function</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> unref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">val</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  return</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> isRef</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">val</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ?</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> val</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">value</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> :</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> val</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>判断是否是 ref 如果是 ref 那么就自动帮助你 .value 否则 直接返回</p><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><p>在模板渲染上下文中，只有顶级的 ref 属性才会被解包。</p><p>例如：</p><div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ✅ 这种方式 自动解包</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> count</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// ❌ 这种方式不会自动解包</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> object</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> id</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> ref</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const r=i(n,[["render",l],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/article/d2sccugu/","title":"vue3的template 为 什么不需要加 .value","lang":"zh-CN","frontmatter":{"title":"vue3的template 为 什么不需要加 .value","createTime":"2025/05/18 19:39:06","permalink":"/article/d2sccugu/","author":"李嘉明","tags":["小课堂"],"description":"**在 Vue 3 的模板编译过程中，ref 会自动解包为其 .value 值。**这个机制被称为 \\"template ref unwrapping\\"，并且只在模板中生效，不会影响 JavaScript 逻辑。 原理：自动解包是如何实现的？ ✅ 1. 编译阶段处理：模板编译器会自动识别 ref 并插入 .value 访问 ✅ 2. unref() 是什...","head":[["meta",{"property":"og:url","content":"http://garmin21.github.io/jm-blog/article/d2sccugu/"}],["meta",{"property":"og:site_name","content":"Garming"}],["meta",{"property":"og:title","content":"vue3的template 为 什么不需要加 .value"}],["meta",{"property":"og:description","content":"**在 Vue 3 的模板编译过程中，ref 会自动解包为其 .value 值。**这个机制被称为 \\"template ref unwrapping\\"，并且只在模板中生效，不会影响 JavaScript 逻辑。 原理：自动解包是如何实现的？ ✅ 1. 编译阶段处理：模板编译器会自动识别 ref 并插入 .value 访问 ✅ 2. unref() 是什..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-19T07:19:37.000Z"}],["meta",{"property":"article:author","content":"李嘉明"}],["meta",{"property":"article:tag","content":"小课堂"}],["meta",{"property":"article:modified_time","content":"2025-05-19T07:19:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3的template 为 什么不需要加 .value\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-19T07:19:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李嘉明\\"}]}"]]},"headers":[],"readingTime":{"minutes":0.78,"words":234},"git":{"updatedTime":1747639177000},"autoDesc":true,"filePathRelative":"1.前端/0.小课堂/vue3的问题1.md","categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"bb13c7","sort":0,"name":"小课堂"}],"bulletin":false}');export{r as comp,k as data};
