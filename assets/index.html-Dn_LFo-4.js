import{_ as s,c as e,a,o as t}from"./app-Cnlb17sY.js";const n="/jm-blog/images/learn-css/4.png",l={};function d(h,i){return t(),e("div",null,i[0]||(i[0]=[a('<h2 id="line-height" tabindex="-1"><a class="header-anchor" href="#line-height"><span>line-height</span></a></h2><p>line-height 是用于控制文本，和内联元素的高度。规范来说就是两行文字基线之间的距离，行高直接决定了内联元素占用的高度（不包括替换元素）， line-height 是可以被继承的。</p><p>理解概念，四线格，</p><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><div style="width:200px;margin:20px auto;padding-bottom:10px;border-radius:5px;overflow:hidden;box-shadow:var(--vp-shadow-2);"><img src="'+n+`" alt=""></div></div></div><p>下面是一个 典型例子：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">outer</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  background-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  line-height</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 50</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">px</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p align="center">嵌套文本</p><div class="outer"> 文本，文本，文本，文本 </div></div></div><h2 id="值-不支持负值" tabindex="-1"><a class="header-anchor" href="#值-不支持负值"><span>值 (不支持负值)</span></a></h2><ul><li>normal：执行浏览器默认值，在各个浏览器中不同，并且还受字体的影响</li><li>数字：没有单位，比如 1.5 就是当前元素文字大小的 1.5 倍</li><li>百分比：也是相对于当前元素的文字大小计算的，很少使用</li><li>长度：带单位，直接设置行高</li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">outer-1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  background-color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> red</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  line-height</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  color</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> black</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="demo-wrapper"><div class="demo-head"><div class="demo-ctrl"><i></i><i></i><i></i></div></div><div class="demo-container"><p align="center">设置浏览器默认字体大小 ✖️ 3</p><div class="outer-1"> 文本，文本，文本，文本 </div></div></div><h2 id="行距与半行距" tabindex="-1"><a class="header-anchor" href="#行距与半行距"><span>行距与半行距</span></a></h2><ul><li>行距是 上边一行文字的底线和下边一行文字的顶线之间的距离</li><li>半行距 就是行距的一半; 让行高减去一行文字的高度，得到的值除以 2，就是半行距</li><li>一行文字的上边和下边分别是两个半行距</li><li>半行距高度*2 + 文字的字号 = 行高</li></ul>`,13)]))}const p=s(l,[["render",d],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/learn-css/line-height/","title":"行高","lang":"zh-CN","frontmatter":{"title":"行高","author":"李嘉明","tags":["CSS"],"createTime":"2024/04/13 11:34:06","permalink":"/learn-css/line-height/","description":"line-height line-height 是用于控制文本，和内联元素的高度。规范来说就是两行文字基线之间的距离，行高直接决定了内联元素占用的高度（不包括替换元素）， line-height 是可以被继承的。 理解概念，四线格， 下面是一个 典型例子： 嵌套文本 文本，文本，文本，文本 值 (不支持负值) normal：执行浏览器默认值，在各个浏览...","head":[["meta",{"property":"og:url","content":"http://garmin21.github.io/jm-blog/learn-css/line-height/"}],["meta",{"property":"og:site_name","content":"Garming"}],["meta",{"property":"og:title","content":"行高"}],["meta",{"property":"og:description","content":"line-height line-height 是用于控制文本，和内联元素的高度。规范来说就是两行文字基线之间的距离，行高直接决定了内联元素占用的高度（不包括替换元素）， line-height 是可以被继承的。 理解概念，四线格， 下面是一个 典型例子： 嵌套文本 文本，文本，文本，文本 值 (不支持负值) normal：执行浏览器默认值，在各个浏览..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-01T08:50:44.000Z"}],["meta",{"property":"article:author","content":"李嘉明"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:modified_time","content":"2025-01-01T08:50:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"行高\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-01T08:50:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李嘉明\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.39,"words":416},"git":{"updatedTime":1735721444000},"autoDesc":true,"filePathRelative":"1.前端/7.css/基础篇/line-height.md","categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"7e9d4b","sort":7,"name":"css"},{"id":"84a65f","sort":10006,"name":"基础篇"}],"bulletin":false}');export{p as comp,c as data};
