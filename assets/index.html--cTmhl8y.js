import{_ as s,c as i,a as t,o as a}from"./app-BqJc4isL.js";const n={};function r(h,e){return a(),i("div",null,e[0]||(e[0]=[t('<div class="hint-container info"><p class="hint-container-title">题目</p><p>Github: <a href="https://github.com/type-challenges/type-challenges/blob/main/questions/03060-easy-unshift/" target="_blank" rel="noopener noreferrer">Unshift</a></p><p>实现类型版本的 <code>Array.unshift</code>。</p><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Unshift</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // [0, 1, 2,]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h3 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h3><p>通过 泛型约束<code>T</code> 为数组类型，对 <code>T</code> 进行展开到新数组中，并将 <code>U</code> 合并到新数组的首位。</p><h3 id="答案" tabindex="-1"><a class="header-anchor" href="#答案"><span>答案</span></a></h3><div class="language-ts line-numbers-mode" data-ext="ts" data-title="ts"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">type</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Unshift</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> extends</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> any</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[],</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> U</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">U</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ...</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">T</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h3><blockquote><ul><li><a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-0.html#variadic-tuple-types" target="_blank" rel="noopener noreferrer">可变元组 Variadic Tuple Types</a></li><li><a href="https://www.typescriptlang.org/docs/handbook/2/generics.html" target="_blank" rel="noopener noreferrer">泛型 Generics</a></li><li><a href="https://www.typescriptlang.org/docs/handbook/2/generics.html#generic-constraints" target="_blank" rel="noopener noreferrer">泛型约束 Generics Constraints</a></li></ul></blockquote>',7)]))}const p=s(n,[["render",r]]),o=JSON.parse('{"path":"/type-challenges/easy/unshift/","title":"✔️ Unshift","lang":"zh-CN","frontmatter":{"title":"✔️ Unshift","createTime":"2022/12/01 04:18:16","author":"李嘉明","permalink":"/type-challenges/easy/unshift/","description":"题目 Github: Unshift 实现类型版本的 Array.unshift。 解题思路 通过 泛型约束T 为数组类型，对 T 进行展开到新数组中，并将 U 合并到新数组的首位。 答案 参考 可变元组 Variadic Tuple Types 泛型 Generics 泛型约束 Generics Constraints","head":[["meta",{"property":"og:url","content":"http://garmin21.github.io/jm-blog/type-challenges/easy/unshift/"}],["meta",{"property":"og:site_name","content":"Garming"}],["meta",{"property":"og:title","content":"✔️ Unshift"}],["meta",{"property":"og:description","content":"题目 Github: Unshift 实现类型版本的 Array.unshift。 解题思路 通过 泛型约束T 为数组类型，对 T 进行展开到新数组中，并将 U 合并到新数组的首位。 答案 参考 可变元组 Variadic Tuple Types 泛型 Generics 泛型约束 Generics Constraints"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-12T11:44:38.000Z"}],["meta",{"property":"article:author","content":"李嘉明"}],["meta",{"property":"article:modified_time","content":"2024-12-12T11:44:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"✔️ Unshift\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-12T11:44:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"李嘉明\\"}]}"]]},"headers":[],"readingTime":{"minutes":0.42,"words":126},"git":{"updatedTime":1734003878000},"autoDesc":true,"filePathRelative":"notes/type-challenges/简单/unshift.md","bulletin":false}');export{p as comp,o as data};
