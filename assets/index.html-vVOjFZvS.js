import{_ as s,c as t,a,o as e}from"./app-CEGmuM7K.js";const n="/jm-blog/assets/image-72zD1jTE.png",l={};function p(h,i){return e(),t("div",null,i[0]||(i[0]=[a(`<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;!</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">DOCTYPE</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> html</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">html</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">head</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">meta</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> charset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">UTF-8</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">title</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">head</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">body</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    &lt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">video</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> src</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">./1.mp4</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> controls</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> width</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">500px</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">video</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  &lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">body</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">&lt;/</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">html</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如上代码，页面中有一个video标签，未设置视频的自动播放，在页面打开时该视频的请求如下：</p><p><img src="`+n+'" alt="alt text"></p><p>可以看见会分出3个HTTP状态码为206的请求，此时点击播放，最底下的请求继续接收数据，直到视频全部加载，</p><p>假设最底下的请求是视频数据流，那么前两个请包含什么内容？有方法去掉或者压缩吗？</p><p>给video设置poster属性为其指定一个缩略图，在页面打开时仍旧是三个media请求，所以和缩略图应该没有关系。</p><h2 id="答" tabindex="-1"><a class="header-anchor" href="#答"><span>答</span></a></h2><ol><li><p>请求视频这类文件的时候因为响应会很大，如果全部下载下来再播放会等待很长时间，用户体验不好，所以服务器会允许浏览器使用range头来请求视频的某一部分，并设置以206的响应码进行响应，来使浏览器可以边播放边请求，优化用户体验。所以会出现状态码为206的响应。</p></li><li><p>另一方面，浏览器只有在获取到视频的元信息（metadata）后才开始播放视频，而一般不经过优化的视频，其元数据信息存在视频文件末尾。所以会出现连续三个请求的情况：第一个请求是先从0字节找视频的元数据信息，没找到的话，会继续发起一个请求到视频末尾去找，等找到以后，又会重新开始一个请求从视频开头处开始请求，此时视频才开始播放。如果视频经过优化，元数据信息在视频开头，就只会有一个请求了，所以推荐使用HandBrake这类的工具对视频经过网络优化后再上传。</p></li></ol><p><a href="https://www.zhangxinxu.com/wordpress/2018/12/video-moov-box/" target="_blank" rel="noopener noreferrer">从天猫某活动视频不必要的3次请求说起</a></p>',9)]))}const r=s(l,[["render",p],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/article/6uyniefd/","title":"video标签中数据请求问题","lang":"zh-CN","frontmatter":{"title":"video标签中数据请求问题","createTime":"2025/01/01 16:43:33","permalink":"/article/6uyniefd/","tags":["html"],"description":"如上代码，页面中有一个video标签，未设置视频的自动播放，在页面打开时该视频的请求如下： alt text 可以看见会分出3个HTTP状态码为206的请求，此时点击播放，最底下的请求继续接收数据，直到视频全部加载， 假设最底下的请求是视频数据流，那么前两个请包含什么内容？有方法去掉或者压缩吗？ 给video设置poster属性为其指定一个缩略图，在页...","head":[["meta",{"property":"og:url","content":"http://garmin21.github.io/jm-blog/article/6uyniefd/"}],["meta",{"property":"og:site_name","content":"Garming"}],["meta",{"property":"og:title","content":"video标签中数据请求问题"}],["meta",{"property":"og:description","content":"如上代码，页面中有一个video标签，未设置视频的自动播放，在页面打开时该视频的请求如下： alt text 可以看见会分出3个HTTP状态码为206的请求，此时点击播放，最底下的请求继续接收数据，直到视频全部加载， 假设最底下的请求是视频数据流，那么前两个请包含什么内容？有方法去掉或者压缩吗？ 给video设置poster属性为其指定一个缩略图，在页..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-01T08:50:44.000Z"}],["meta",{"property":"article:tag","content":"html"}],["meta",{"property":"article:modified_time","content":"2025-01-01T08:50:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"video标签中数据请求问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-01T08:50:44.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.79,"words":536},"git":{"updatedTime":1735721444000},"autoDesc":true,"filePathRelative":"1.前端/1.基础/video标签注意事项.md","categoryList":[{"id":"72e6d5","sort":1,"name":"前端"},{"id":"f67703","sort":1,"name":"基础"}],"bulletin":false}');export{r as comp,d as data};
